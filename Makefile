###############################################################################
###################### <github.com/aszdrick/magefile/> ########################
############################ <aszdrick@gmail.com> #############################
###############################################################################

# Copyright (c) 2017 Marleson Graf

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

################################# DIRECTORIES #################################
SRCDIR :=src
INCDIR :=include
OBJDIR :=build
BINDIR :=bin
TSTDIR :=tests
DEPDIR :=.deps
################################ CONFIGURATION ################################
# Compiler & linker flags
CXXFLAGS  :=-Wall -std=c++14
LDFLAGS   :=
LDLIBS    :=
INCLUDE   :=-I$(INCDIR)
# Compiler & linker flags for tests
TCXXFLAGS :=
TLDFLAGS  :=
TLDLIBS   :=
TINCLUDE  :=
#################################### FILES ####################################
MAINFILE :=main
EXECFILE :=$(BINDIR)/exec
# Project files
SOURCES  :=$(shell find $(SRCDIR) -name '*.cpp' 2> /dev/null)
DEPS     :=$(patsubst %.cpp,$(DEPDIR)/%.d,$(SOURCES))
OBJECTS  :=$(patsubst %.cpp,$(OBJDIR)/%.o,$(SOURCES))
# Test files
TMAINFILES :=$(wildcard $(TSTDIR)/*.cpp)
TMAINDEPS  :=$(patsubst %.cpp,$(DEPDIR)/%.mk,$(TMAINFILES))
TSOURCES   :=$(shell find $(TSTDIR) -name '*.cpp' 2> /dev/null)
TOBJECTS   :=$(patsubst %.cpp,$(OBJDIR)/%.o,$(TSOURCES))
TDEPS      :=$(patsubst %.cpp,$(DEPDIR)/%.d,$(TSOURCES))
TEXEC      :=$(patsubst $(TSTDIR)/%.cpp,$(BINDIR)/%,$(TMAINFILES))
# TCALL      :=$(patsubst %.cpp,%,$(notdir $(TMAINFILES)))
################################ MISCELLANEOUS ################################
# Debug flag, deactivates all supressed echoing
# DEBUG := True

# Autogenerated directories, usefull to quickly create directories structure
MAKEDIR   :=$(BINDIR) $(SRCDIR) $(INCDIR)
# 'echo' command, suppressed in all cases
ECHO      :=@echo
# If DEBUG is not defined, set supressing character (@)
ifndef DEBUG
SUPPRESS  :=@
endif

.PHONY: all makedir clean clean-all tests

################################# MAIN RULES ##################################

all: makedir $(EXECFILE)

$(EXECFILE): $(OBJECTS)
	$(ECHO) "[linking] $@"
	$(SUPPRESS) $(CXX) $(CXXFLAGS) $(LDFLAGS) $(OBJECTS) $(LDLIBS) -o $@

$(OBJDIR)/%.o: %.cpp
	$(ECHO) "[  $(CXX)  ] $< -> .o"
	$(SUPPRESS) mkdir -p $(OBJDIR)/$(*D)
	$(SUPPRESS) $(CXX) $(CXXFLAGS) $(INCLUDE) -c $< -o $@

# For each .cpp file, creates a .d file with all dependencies of .cpp,
# including .d as target (to ensure up-to-date dependencies, in case of
# new includes being added)
$(DEPDIR)/%.d: %.cpp
	$(ECHO) "[makedep] $< -> .d"
	$(SUPPRESS) mkdir -p $(DEPDIR)/$(*D)
	$(SUPPRESS) $(CXX) $(CXXFLAGS) $(INCLUDE) -MM -MP -MG \
	-MT "$(OBJDIR)/$*.o $@" -MF "$@" $<

makedir: | $(MAKEDIR)

$(MAKEDIR):
	$(ECHO) "[ mkdir ] Creating directory '$@'"
	$(SUPPRESS) mkdir -p $@

################################ TESTS RULES ##################################
tests: makedir $(TEXEC)

# $(foreach t,$(TCALL),$(t): $(BINDIR)/$(t))

$(TEXEC): LDLIBS +=$(TLDLIBS)

$(TEXEC): LDFLAGS +=$(TLDFLAGS)

$(OBJDIR)/$(TSTDIR)/%.o: CXXFLAGS +=$(TCXXFLAGS)

$(OBJDIR)/$(TSTDIR)/%.o: INCLUDE +=$(TINCLUDE)

$(TEXEC):
	$(ECHO) "[linking] $@"
	$(SUPPRESS) $(CXX) $(CXXFLAGS) $(LDFLAGS) $(INCLUDE) \
	$($(@F)_OBJS) $(LDLIBS) -o $@

$(TMAINDEPS): %.mk: %.d
	$(ECHO) "[makedep] $< -> .mk"
	$(SUPPRESS) mkdir -p $(*D)
	$(SUPPRESS) objs="$(*F)_OBJS";\
	echo $$objs:='$$(shell cat $*.d)' > $@;\
	echo $$objs:='$$(filter %.h %.hpp %.cpp,$$('$$objs'))' >> $@;\
	echo $$objs:=\
		'$$(patsubst $$(INCDIR)/%.hpp,$$(SRCDIR)/%.cpp,$$('$$objs'))' >> $@;\
	echo $$objs:='$$(patsubst %.cpp,$$(OBJDIR)/%.o,$$('$$objs'))' >> $@;\
	echo $$objs:='$$(filter $$('$$objs'),$$(OBJECTS) $$(TOBJECTS))' >> $@;\
	echo >> $@; echo '$$(BINDIR)'/$(*F): '$$('$$objs')' >> $@;

################################ CLEAN RULES ##################################
# Only remove object files
clean: $(MCLEAN)
	$(SUPPRESS) $(RM) -r $(OBJDIR)

# Remove object, binary and dependency files
clean-all: clean $(MCLNALL)
	$(SUPPRESS) $(RM) -r $(BINDIR)
	$(SUPPRESS) $(RM) -r $(DEPDIR)

################################ PREREQUISITES ################################
# Do not include list of dependencies with clean rules
ifneq ($(MAKECMDGOALS), clean)
  ifneq ($(MAKECMDGOALS), clean-all)
    -include $(DEPS)
    ifeq ($(MAKECMDGOALS), tests)
      -include $(TDEPS)
      -include $(TMAINDEPS)
    endif
  endif
endif
